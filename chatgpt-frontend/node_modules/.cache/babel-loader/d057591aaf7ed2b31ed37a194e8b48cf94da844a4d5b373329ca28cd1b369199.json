{"ast":null,"code":"var _jsxFileName = \"/home/shivam/College_Project/chatgpt-frontend/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputText, setInputText] = useState('');\n  const [selectedModel, setSelectedModel] = useState('chat');\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [sessionId, setSessionId] = useState(() => `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`);\n  const fileInputRef = useRef(null);\n  const messagesEndRef = useRef(null);\n  const models = [{\n    value: 'chat',\n    label: 'LLaMA 3.1 8B',\n    endpoint: '/model/chat',\n    supportsImages: false\n  }, {\n    value: 'qwen',\n    label: 'Qwen 2.5 VL 7B',\n    endpoint: '/model/qwen',\n    supportsImages: true\n  }, {\n    value: 'gemma',\n    label: 'Gemma 3 12B',\n    endpoint: '/model/gemma',\n    supportsImages: false\n  }, {\n    value: 'image',\n    label: 'Stable Diffusion XL',\n    endpoint: '/model/generate-image',\n    supportsImages: false\n  }];\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Load conversation history when model changes\n  useEffect(() => {\n    const loadConversation = async () => {\n      if (selectedModel === 'image') return; // No conversation for image generation\n\n      try {\n        const response = await fetch(`http://localhost:4001/model/${selectedModel}/${sessionId}`);\n        if (response.ok) {\n          const data = await response.json();\n          if (data.conversationHistory && data.conversationHistory.length > 0) {\n            const formattedMessages = data.conversationHistory.map(msg => ({\n              id: msg.id,\n              role: msg.role,\n              text: msg.text,\n              timestamp: msg.timestamp\n            }));\n            setMessages(formattedMessages);\n          }\n        }\n      } catch (error) {\n        console.log('No previous conversation found');\n      }\n    };\n    loadConversation();\n  }, [selectedModel, sessionId]);\n  const handleModelChange = e => {\n    const newModel = e.target.value;\n    setSelectedModel(newModel);\n\n    // Clear current conversation and start fresh\n    setMessages([]);\n    setInputText('');\n    setSelectedFile(null);\n\n    // Generate new session ID for the new model\n    setSessionId(`session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n  const handleFileSelect = event => {\n    const file = event.target.files[0];\n    if (file) {\n      // Validate file type\n      if (!file.type.startsWith('image/')) {\n        alert('Please select an image file');\n        return;\n      }\n\n      // Validate file size (max 10MB)\n      if (file.size > 10 * 1024 * 1024) {\n        alert('File size should be less than 10MB');\n        return;\n      }\n      setSelectedFile(file);\n    }\n  };\n  const removeFile = () => {\n    setSelectedFile(null);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n  const uploadImageToBase64 = file => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = reject;\n      reader.readAsDataURL(file);\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!inputText.trim() && !selectedFile) return;\n    const userMessage = inputText.trim();\n    setInputText('');\n    setIsLoading(true);\n\n    // Add user message to chat\n    const newUserMessage = {\n      id: Date.now(),\n      role: 'user',\n      text: userMessage,\n      timestamp: Date.now(),\n      file: selectedFile\n    };\n    setMessages(prev => [...prev, newUserMessage]);\n    try {\n      let response;\n      const selectedModelConfig = models.find(m => m.value === selectedModel);\n      console.log('Selected model:', selectedModel);\n      console.log('Request URL:', `http://localhost:4001${selectedModelConfig.endpoint}`);\n      if (selectedModel === 'image') {\n        // Handle image generation\n        const requestBody = {\n          prompt: userMessage\n        };\n        console.log('Image request body:', requestBody);\n        response = await fetch(`http://localhost:4001${selectedModelConfig.endpoint}`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(requestBody)\n        });\n        console.log('Image response status:', response.status);\n        if (response.ok) {\n          const imageBlob = await response.blob();\n          const imageUrl = URL.createObjectURL(imageBlob);\n          const assistantMessage = {\n            id: Date.now() + 1,\n            role: 'assistant',\n            text: `Generated image for: \"${userMessage}\"`,\n            timestamp: Date.now(),\n            imageUrl: imageUrl\n          };\n          setMessages(prev => [...prev, assistantMessage]);\n        } else {\n          const errorText = await response.text();\n          throw new Error(`Image generation failed: ${response.status} - ${errorText}`);\n        }\n      } else {\n        // Handle text chat models\n        let requestBody = {\n          sessionId: sessionId\n        };\n\n        // Handle image upload for vision models\n        if (selectedFile && selectedModelConfig.supportsImages) {\n          const base64Image = await uploadImageToBase64(selectedFile);\n          requestBody.imageData = base64Image;\n        }\n        if (selectedModel === 'chat') {\n          requestBody.userMessage = userMessage;\n        } else if (selectedModel === 'qwen') {\n          requestBody.userMessage = userMessage;\n          if (selectedFile) {\n            const base64Image = await uploadImageToBase64(selectedFile);\n            requestBody.imageUrl = base64Image;\n          }\n        } else if (selectedModel === 'gemma') {\n          requestBody.prompt = userMessage;\n          // Gemma doesn't support images in your current setup\n        }\n        console.log('Chat request body:', {\n          ...requestBody,\n          imageData: requestBody.imageData ? '[IMAGE_DATA]' : undefined,\n          imageUrl: requestBody.imageUrl ? '[IMAGE_DATA]' : undefined\n        });\n        response = await fetch(`http://localhost:4001${selectedModelConfig.endpoint}`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(requestBody)\n        });\n        console.log('Chat response status:', response.status);\n        if (response.ok) {\n          const data = await response.json();\n          console.log('Chat response data:', data);\n\n          // Handle different response formats\n          let replyText = '';\n          if (data.reply) {\n            replyText = data.reply;\n          } else if (data.choices && data.choices[0] && data.choices[0].message) {\n            replyText = data.choices[0].message.content;\n          } else if (data.message) {\n            replyText = data.message;\n          } else if (typeof data === 'string') {\n            replyText = data;\n          } else {\n            replyText = 'Received response but could not parse it.';\n          }\n          console.log('Extracted reply text:', replyText);\n          const assistantMessage = {\n            id: Date.now() + 1,\n            role: 'assistant',\n            text: replyText,\n            timestamp: Date.now()\n          };\n          setMessages(prev => [...prev, assistantMessage]);\n        } else {\n          const errorText = await response.text();\n          console.error('Response error:', errorText);\n          throw new Error(`Request failed: ${response.status} - ${errorText}`);\n        }\n      }\n    } catch (error) {\n      console.error('Full error:', error);\n      const errorMessage = {\n        id: Date.now() + 1,\n        role: 'assistant',\n        text: `Error: ${error.message}`,\n        timestamp: Date.now(),\n        isError: true\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    }\n    setSelectedFile(null);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n    setIsLoading(false);\n  };\n  const startNewChat = () => {\n    setMessages([]);\n    setInputText('');\n    setSelectedFile(null);\n    setSessionId(`session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n  const currentModelConfig = models.find(m => m.value === selectedModel);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-header\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new-chat-btn\",\n          onClick: startNewChat,\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"16\",\n            height: \"16\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M12 5V19M5 12H19\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\",\n              strokeLinecap: \"round\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), \"New chat\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-history\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-title\",\n            children: \"Today\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-item active\",\n            children: [currentModelConfig.label, \" - \", messages.length > 0 ? 'Active Chat' : 'New Chat']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-avatar\",\n            children: \"U\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"model-selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedModel,\n            onChange: handleModelChange,\n            className: \"model-dropdown\",\n            children: models.map(model => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: model.value,\n              children: model.label\n            }, model.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this), currentModelConfig.supportsImages && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"model-feature\",\n            children: \"\\uD83D\\uDCF7 Vision Enabled\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages-container\",\n        children: messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"welcome-screen\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"What's on your mind today?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Using \", currentModelConfig.label]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }, this), currentModelConfig.supportsImages && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"feature-note\",\n            children: \"\\uD83D\\uDCA1 This model supports image analysis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 17\n          }, this), selectedModel === 'image' && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"feature-note\",\n            children: \"\\uD83C\\uDFA8 This model generates images from text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages\",\n          children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${message.role}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-avatar\",\n              children: message.role === 'user' ? 'U' : 'AI'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: [message.file && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-file\",\n                children: [\"\\uD83D\\uDCF7 \", message.file.name, \" (\", Math.round(message.file.size / 1024), \"KB)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 23\n              }, this), message.text && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `message-text ${message.isError ? 'error' : ''}`,\n                children: message.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 23\n              }, this), message.imageUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-image\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: message.imageUrl,\n                  alt: \"Generated\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 19\n            }, this)]\n          }, message.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 17\n          }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message assistant\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-avatar\",\n              children: \"AI\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"typing-indicator\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [selectedFile && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selected-file\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\uD83D\\uDCF7 \", selectedFile.name, \" (\", Math.round(selectedFile.size / 1024), \"KB)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: removeFile,\n            className: \"remove-file\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"input-form\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              ref: fileInputRef,\n              onChange: handleFileSelect,\n              accept: \"image/*\",\n              style: {\n                display: 'none'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 15\n            }, this), (currentModelConfig.supportsImages || selectedModel === 'image') && /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"attach-btn\",\n              onClick: () => {\n                var _fileInputRef$current;\n                return (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n              },\n              title: \"Attach image\",\n              children: \"\\uD83D\\uDCF7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: inputText,\n              onChange: e => setInputText(e.target.value),\n              placeholder: selectedModel === 'image' ? 'Describe the image you want to generate...' : currentModelConfig.supportsImages ? 'Ask anything or upload an image...' : 'Ask anything...',\n              className: \"message-input\",\n              disabled: isLoading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"send-btn\",\n              disabled: !inputText.trim() && !selectedFile || isLoading,\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"16\",\n                height: \"16\",\n                viewBox: \"0 0 24 24\",\n                fill: \"none\",\n                xmlns: \"http://www.w3.org/2000/svg\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M7 11L12 6L17 11M12 18V7\",\n                  stroke: \"currentColor\",\n                  strokeWidth: \"2\",\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 431,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"hOE8Sj5W7Gyp4ab0ACVTEHnY1zQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","App","_s","messages","setMessages","inputText","setInputText","selectedModel","setSelectedModel","selectedFile","setSelectedFile","isLoading","setIsLoading","sessionId","setSessionId","Date","now","Math","random","toString","substr","fileInputRef","messagesEndRef","models","value","label","endpoint","supportsImages","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","loadConversation","response","fetch","ok","data","json","conversationHistory","length","formattedMessages","map","msg","id","role","text","timestamp","error","console","log","handleModelChange","e","newModel","target","handleFileSelect","event","file","files","type","startsWith","alert","size","removeFile","uploadImageToBase64","Promise","resolve","reject","reader","FileReader","onload","result","onerror","readAsDataURL","handleSubmit","preventDefault","trim","userMessage","newUserMessage","prev","selectedModelConfig","find","m","requestBody","prompt","method","headers","body","JSON","stringify","status","imageBlob","blob","imageUrl","URL","createObjectURL","assistantMessage","errorText","Error","base64Image","imageData","undefined","replyText","reply","choices","message","content","errorMessage","isError","startNewChat","currentModelConfig","className","children","onClick","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","fileName","_jsxFileName","lineNumber","columnNumber","onChange","model","name","round","src","alt","ref","onSubmit","accept","style","display","_fileInputRef$current","click","title","placeholder","disabled","strokeLinejoin","_c","$RefreshReg$"],"sources":["/home/shivam/College_Project/chatgpt-frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\n\nconst App = () => {\n  const [messages, setMessages] = useState([]);\n  const [inputText, setInputText] = useState('');\n  const [selectedModel, setSelectedModel] = useState('chat');\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [sessionId, setSessionId] = useState(() => `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`);\n  \n  const fileInputRef = useRef(null);\n  const messagesEndRef = useRef(null);\n\n  const models = [\n    { value: 'chat', label: 'LLaMA 3.1 8B', endpoint: '/model/chat', supportsImages: false },\n    { value: 'qwen', label: 'Qwen 2.5 VL 7B', endpoint: '/model/qwen', supportsImages: true },\n    { value: 'gemma', label: 'Gemma 3 12B', endpoint: '/model/gemma', supportsImages: false },\n    { value: 'image', label: 'Stable Diffusion XL', endpoint: '/model/generate-image', supportsImages: false }\n  ];\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Load conversation history when model changes\n  useEffect(() => {\n    const loadConversation = async () => {\n      if (selectedModel === 'image') return; // No conversation for image generation\n      \n      try {\n        const response = await fetch(`http://localhost:4001/model/${selectedModel}/${sessionId}`);\n        if (response.ok) {\n          const data = await response.json();\n          if (data.conversationHistory && data.conversationHistory.length > 0) {\n            const formattedMessages = data.conversationHistory.map(msg => ({\n              id: msg.id,\n              role: msg.role,\n              text: msg.text,\n              timestamp: msg.timestamp\n            }));\n            setMessages(formattedMessages);\n          }\n        }\n      } catch (error) {\n        console.log('No previous conversation found');\n      }\n    };\n\n    loadConversation();\n  }, [selectedModel, sessionId]);\n\n  const handleModelChange = (e) => {\n    const newModel = e.target.value;\n    setSelectedModel(newModel);\n    \n    // Clear current conversation and start fresh\n    setMessages([]);\n    setInputText('');\n    setSelectedFile(null);\n    \n    // Generate new session ID for the new model\n    setSessionId(`session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`);\n    \n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n\n  const handleFileSelect = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      // Validate file type\n      if (!file.type.startsWith('image/')) {\n        alert('Please select an image file');\n        return;\n      }\n      \n      // Validate file size (max 10MB)\n      if (file.size > 10 * 1024 * 1024) {\n        alert('File size should be less than 10MB');\n        return;\n      }\n      \n      setSelectedFile(file);\n    }\n  };\n\n  const removeFile = () => {\n    setSelectedFile(null);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n\n  const uploadImageToBase64 = (file) => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = reject;\n      reader.readAsDataURL(file);\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!inputText.trim() && !selectedFile) return;\n\n    const userMessage = inputText.trim();\n    setInputText('');\n    setIsLoading(true);\n\n    // Add user message to chat\n    const newUserMessage = {\n      id: Date.now(),\n      role: 'user',\n      text: userMessage,\n      timestamp: Date.now(),\n      file: selectedFile\n    };\n    \n    setMessages(prev => [...prev, newUserMessage]);\n\n    try {\n      let response;\n      const selectedModelConfig = models.find(m => m.value === selectedModel);\n      \n      console.log('Selected model:', selectedModel);\n      console.log('Request URL:', `http://localhost:4001${selectedModelConfig.endpoint}`);\n\n      if (selectedModel === 'image') {\n        // Handle image generation\n        const requestBody = { prompt: userMessage };\n        console.log('Image request body:', requestBody);\n        \n        response = await fetch(`http://localhost:4001${selectedModelConfig.endpoint}`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(requestBody)\n        });\n\n        console.log('Image response status:', response.status);\n\n        if (response.ok) {\n          const imageBlob = await response.blob();\n          const imageUrl = URL.createObjectURL(imageBlob);\n          \n          const assistantMessage = {\n            id: Date.now() + 1,\n            role: 'assistant',\n            text: `Generated image for: \"${userMessage}\"`,\n            timestamp: Date.now(),\n            imageUrl: imageUrl\n          };\n          \n          setMessages(prev => [...prev, assistantMessage]);\n        } else {\n          const errorText = await response.text();\n          throw new Error(`Image generation failed: ${response.status} - ${errorText}`);\n        }\n      } else {\n        // Handle text chat models\n        let requestBody = {\n          sessionId: sessionId\n        };\n\n        // Handle image upload for vision models\n        if (selectedFile && selectedModelConfig.supportsImages) {\n          const base64Image = await uploadImageToBase64(selectedFile);\n          requestBody.imageData = base64Image;\n        }\n\n        if (selectedModel === 'chat') {\n          requestBody.userMessage = userMessage;\n        } else if (selectedModel === 'qwen') {\n          requestBody.userMessage = userMessage;\n          if (selectedFile) {\n            const base64Image = await uploadImageToBase64(selectedFile);\n            requestBody.imageUrl = base64Image;\n          }\n        } else if (selectedModel === 'gemma') {\n          requestBody.prompt = userMessage;\n          // Gemma doesn't support images in your current setup\n        }\n\n        console.log('Chat request body:', {\n          ...requestBody,\n          imageData: requestBody.imageData ? '[IMAGE_DATA]' : undefined,\n          imageUrl: requestBody.imageUrl ? '[IMAGE_DATA]' : undefined\n        });\n\n        response = await fetch(`http://localhost:4001${selectedModelConfig.endpoint}`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(requestBody)\n        });\n\n        console.log('Chat response status:', response.status);\n\n        if (response.ok) {\n          const data = await response.json();\n          console.log('Chat response data:', data);\n          \n          // Handle different response formats\n          let replyText = '';\n          if (data.reply) {\n            replyText = data.reply;\n          } else if (data.choices && data.choices[0] && data.choices[0].message) {\n            replyText = data.choices[0].message.content;\n          } else if (data.message) {\n            replyText = data.message;\n          } else if (typeof data === 'string') {\n            replyText = data;\n          } else {\n            replyText = 'Received response but could not parse it.';\n          }\n          \n          console.log('Extracted reply text:', replyText);\n          \n          const assistantMessage = {\n            id: Date.now() + 1,\n            role: 'assistant',\n            text: replyText,\n            timestamp: Date.now()\n          };\n          \n          setMessages(prev => [...prev, assistantMessage]);\n        } else {\n          const errorText = await response.text();\n          console.error('Response error:', errorText);\n          throw new Error(`Request failed: ${response.status} - ${errorText}`);\n        }\n      }\n    } catch (error) {\n      console.error('Full error:', error);\n      const errorMessage = {\n        id: Date.now() + 1,\n        role: 'assistant',\n        text: `Error: ${error.message}`,\n        timestamp: Date.now(),\n        isError: true\n      };\n      \n      setMessages(prev => [...prev, errorMessage]);\n    }\n\n    setSelectedFile(null);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n    setIsLoading(false);\n  };\n\n  const startNewChat = () => {\n    setMessages([]);\n    setInputText('');\n    setSelectedFile(null);\n    setSessionId(`session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n\n  const currentModelConfig = models.find(m => m.value === selectedModel);\n\n  return (\n    <div className=\"app\">\n      {/* Sidebar */}\n      <div className=\"sidebar\">\n        <div className=\"sidebar-header\">\n          <button className=\"new-chat-btn\" onClick={startNewChat}>\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M12 5V19M5 12H19\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\"/>\n            </svg>\n            New chat\n          </button>\n        </div>\n        \n        <div className=\"sidebar-content\">\n          <div className=\"chat-history\">\n            <div className=\"section-title\">Today</div>\n            <div className=\"chat-item active\">\n              {currentModelConfig.label} - {messages.length > 0 ? 'Active Chat' : 'New Chat'}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"sidebar-footer\">\n          <div className=\"user-info\">\n            <div className=\"user-avatar\">U</div>\n            <span>User</span>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"main-content\">\n        <div className=\"chat-header\">\n          <div className=\"model-selector\">\n            <select \n              value={selectedModel} \n              onChange={handleModelChange}\n              className=\"model-dropdown\"\n            >\n              {models.map(model => (\n                <option key={model.value} value={model.value}>\n                  {model.label}\n                </option>\n              ))}\n            </select>\n            {currentModelConfig.supportsImages && (\n              <span className=\"model-feature\">📷 Vision Enabled</span>\n            )}\n          </div>\n        </div>\n\n        <div className=\"messages-container\">\n          {messages.length === 0 ? (\n            <div className=\"welcome-screen\">\n              <h1>What's on your mind today?</h1>\n              <p>Using {currentModelConfig.label}</p>\n              {currentModelConfig.supportsImages && (\n                <p className=\"feature-note\">💡 This model supports image analysis</p>\n              )}\n              {selectedModel === 'image' && (\n                <p className=\"feature-note\">🎨 This model generates images from text</p>\n              )}\n            </div>\n          ) : (\n            <div className=\"messages\">\n              {messages.map((message) => (\n                <div key={message.id} className={`message ${message.role}`}>\n                  <div className=\"message-avatar\">\n                    {message.role === 'user' ? 'U' : 'AI'}\n                  </div>\n                  <div className=\"message-content\">\n                    {message.file && (\n                      <div className=\"message-file\">\n                        📷 {message.file.name} ({Math.round(message.file.size / 1024)}KB)\n                      </div>\n                    )}\n                    {message.text && (\n                      <div className={`message-text ${message.isError ? 'error' : ''}`}>\n                        {message.text}\n                      </div>\n                    )}\n                    {message.imageUrl && (\n                      <div className=\"message-image\">\n                        <img src={message.imageUrl} alt=\"Generated\" />\n                      </div>\n                    )}\n                  </div>\n                </div>\n              ))}\n              {isLoading && (\n                <div className=\"message assistant\">\n                  <div className=\"message-avatar\">AI</div>\n                  <div className=\"message-content\">\n                    <div className=\"typing-indicator\">\n                      <span></span>\n                      <span></span>\n                      <span></span>\n                    </div>\n                  </div>\n                </div>\n              )}\n              <div ref={messagesEndRef} />\n            </div>\n          )}\n        </div>\n\n        <div className=\"input-container\">\n          {selectedFile && (\n            <div className=\"selected-file\">\n              <span>📷 {selectedFile.name} ({Math.round(selectedFile.size / 1024)}KB)</span>\n              <button onClick={removeFile} className=\"remove-file\">×</button>\n            </div>\n          )}\n          \n          <form onSubmit={handleSubmit} className=\"input-form\">\n            <div className=\"input-wrapper\">\n              <input\n                type=\"file\"\n                ref={fileInputRef}\n                onChange={handleFileSelect}\n                accept=\"image/*\"\n                style={{ display: 'none' }}\n              />\n              \n              {/* Show attach button only for models that support images */}\n              {(currentModelConfig.supportsImages || selectedModel === 'image') && (\n                <button\n                  type=\"button\"\n                  className=\"attach-btn\"\n                  onClick={() => fileInputRef.current?.click()}\n                  title=\"Attach image\"\n                >\n                  📷\n                </button>\n              )}\n\n              <input\n                type=\"text\"\n                value={inputText}\n                onChange={(e) => setInputText(e.target.value)}\n                placeholder={\n                  selectedModel === 'image' \n                    ? 'Describe the image you want to generate...' \n                    : currentModelConfig.supportsImages \n                      ? 'Ask anything or upload an image...'\n                      : 'Ask anything...'\n                }\n                className=\"message-input\"\n                disabled={isLoading}\n              />\n\n              <button\n                type=\"submit\"\n                className=\"send-btn\"\n                disabled={(!inputText.trim() && !selectedFile) || isLoading}\n              >\n                <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path d=\"M7 11L12 6L17 11M12 18V7\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                </svg>\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}